<html>

<head>
  <title>Sharing files using WebRTC</title>
  <script src="/socket.io/socket.io.js"></script>
  <script src="/simplepeer.min.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

  <!-- jQuery library -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

  <!-- Latest compiled JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/downloadjs/1.4.8/download.min.js"></script>

</head>

<body>
  <div id="connected"></div>
  <h1 id="myid"></h1>

  <input type="number" name="hisid">
  <input type="hidden" name="myid" value=>
  <input type="button" value="connect" onclick="sendrequest()">


  <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="caller" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="caller">Modal title</h5>want to share files with you
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>

        <div class="modal-footer">
          <center>
            <button type="button"
              onclick="socket.emit('accept',[document.getElementById('caller').innerHTML,document.getElementsByName('myid')[0].value]);showconnecting();isinitiator=true; loadjs()"
              class="btn btn-success" data-dismiss="modal" id="accept">accept</button>
            <button type="button" onclick="socket.emit('reject',document.getElementById('caller').innerHTML)"
              class="btn btn-danger" data-dismiss="modal" id="reject"> reject</button>
          </center>
        </div>
      </div>
    </div>
  </div>

  <button type="button" id="displaypopup" class="btn btn-primary" data-toggle="modal"
    data-target="#exampleModalLong"></button>
  <table border="10|0">
    <th>
      file name
    </th>
    <th>
      file size
    </th>
    <th>
      remove file
    </th>
    <th>
      fileprogress
    </th>
    <tbody id="filetable">
    <tbody>

  </table>
  <input type="file" multiple="multiple" id="f1" onchange="addfilestoarray()"></input>
  <button onclick="sendfiles()">send</button>


</body>

<script>
  var selectedfilearray = []
  var jsElm = document.createElement("script");
  var towhomconnect

  function showconnecting() {
    //show user that users are connecting
  }
  socket = io.connect()

  socket.on("myrandomid", function (myrandomid) {
    document.getElementById("myid").innerHTML = "enter this id in other  device :" + myrandomid + "<br >OR Enter Other divice id in this box To Start sharing"
    document.getElementsByName("myid")[0].value = myrandomid
  })

  socket.on("makeconnection", function (hisid) {
    document.getElementById("caller").innerHTML = hisid
    //
    document.getElementById("displaypopup").click()

  })
  socket.on("accepted", whosrequest => {
    document.getElementById("caller").innerHTML = whosrequest

    if (whosrequest == document.getElementsByName("hisid")[0].value) {
      towhomconnect = whosrequest
      console.log(whosrequest)
      // alert("accepted")
      showconnecting()
      isinitiator = false


    }
  })

  socket.on("rejected", whosrequest => {
    alert("rejected")
  })
  socket.on("peerid", pid => {
    if (!isinitiator)
      loadjs()
    console.log(pid)
    if (towhomconnect == document.getElementsByName("hisid")[0].value) {
      jsElm.onload = function () {
        callpeertoconnect(pid);
        console.log("andar aaya")
      }

    }
    else {
      console.log("uska id nai hai")
      console.log(towhomconnect, document.getElementsByName("hisid")[0].value)
    }
    if (isinitiator == true)
      callpeertoconnect(pid);


  })

  function sendrequest() {
    socket.emit("sendrequest", [document.getElementsByName("myid")[0].value, document.getElementsByName("hisid")[0].value])
  }


  function loadjs() {

    jsElm.type = "text/javascript";
    jsElm.src = "peerconnection.js";
    document.body.append(jsElm);

  }



  function sendfiles() {
    selectedfilearray.forEach(file => {
      console.log(file["name"])
      file.arrayBuffer().then(
        filedata => {
          peer.send(file["name"])
          chunksize = 30 * 1024
          totalsize = filedata.byteLength
          a = Date.now()-1000
          console.log(Date.now())
          while (filedata.byteLength) {
            tosend = filedata.slice(0, chunksize)
            filedata = filedata.slice(chunksize, filedata.byteLength)
            peer.send(tosend)

            if (Date.now() - a >= 100) {
              document.getElementsByName(file["name"])[1].setAttribute("style", "width:" + (totalsize - filedata.byteLength) / totalsize * 100 + "%")
              document.getElementsByName(file["name"])[1].innerHTML = (totalsize - filedata.byteLength) / totalsize * 100
            //  console.log((totalsize - filedata.byteLength) / totalsize * 100)
              a = Date.now()
      
            }
            else {
            }

          }
          console.log(Date.now())
          
          peer.send("done")

        })
    })

  }
  function displayonUI(fname, fsize) {    //this will not allow multifile  with same name i will change it in future to allow multiple file wiht same name
    document.getElementById("filetable").innerHTML += `<tr name="${fname}"><td>${fname}<tdfadsf><td>${fsize}</td><td><button id='${fname}' onclick='removefilefromarray(this)'>remove</button></td><td><div class="progress">  <div class="progress-bar" role="progressbar" style="width: 0.1%;"  name ="${fname}"  </div></div></td><tr>`
  }
  function isfilealreadyselected(filetocheck) {
    isduplicate = false
    selectedfilearray.forEach(file => {
      if (file["name"] == filetocheck["name"] && file["lastmodified"] == filetocheck["namlastmodifiede"]) {
        isduplicate = true
      }
    })
    if (!isduplicate)
      displayonUI(filetocheck["name"], filetocheck["size"])
    return isduplicate
  }


  function addfilestoarray() {
    var file = document.getElementById("f1")
    Object.values(file.files).forEach(eachfile => {
      if (!isfilealreadyselected(eachfile))
        selectedfilearray.push(eachfile)
    });
    console.log(selectedfilearray)
  }

  function removefilefromarray(idofele) {
    idofele = idofele.id
    pos = 0
    Object.values(selectedfilearray).forEach(file => {
      if (file["name"] == idofele) {
        console.log(pos)
        selectedfilearray.splice(pos, 1)
      }
      pos++
    })
    document.getElementsByName(idofele)[0].remove()
    console.log(selectedfilearray)
  }
</script>

</html>